# Redirect www to non-www with HTTPS for primary domain
server {
    listen 80;
    server_name www.aaf-services.uk;
    return 301 https://aaf-services.uk$request_uri;
}

# Redirect HTTP to HTTPS for primary domain
server {
    listen 80;
    server_name aaf-services.uk;
    return 301 https://$host$request_uri;
}

# Primary domain server block with HTTPS
server {
    listen 443 ssl;
    server_name aaf-services.uk;

    ssl_certificate /etc/letsencrypt/live/aaf-services.uk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aaf-services.uk/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://localhost:8501;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }
}

# Subdomain server block for exp.aaf-services.uk
server {
    listen 80;
    server_name exp.aaf-services.uk;
    return 301 https://exp.aaf-services.uk$request_uri;
}

server {
    listen 443 ssl;
    server_name exp.aaf-services.uk;

    ssl_certificate /etc/letsencrypt/live/aaf-services.uk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aaf-services.uk/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    location / {
        alias /home/ubuntu/CentralServiceAAF/3JSExp/;
        index main.html;
    }
}

# Subdomain server block for api.aaf-services.uk
server {
    listen 80;
    server_name api.aaf-services.uk;
    return 301 https://api.aaf-services.uk$request_uri;
}

server {
    listen 443 ssl;
    server_name api.aaf-services.uk;

    ssl_certificate /etc/letsencrypt/live/aaf-services.uk/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/aaf-services.uk/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://localhost:8000;  # Ensure this matches the port used for FastAPI
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}



